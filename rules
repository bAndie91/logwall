##
## logwall(1) ruleset file
##
## Syntax:
##   <keyword><operator><value>
## There can be more keyword-operator-value triplets in one line
## delimited by whitespace.
##
## Keywords:
##
##   Testing keywords:
##     Log message's attributes:
##       facility**, severity**, tag, sourcename, pid*, msg
##     Logging process' attributes:
##       realpid*, proc_uid*, proc_gid*, proc_owner, proc_group, exe, comm, args
##     Process' executable file's attributes:
##       exe_uid*, exe_gid*, exe_owner, exe_group
##     Other attributes:
##       sourcenick, sourcefile, tee***
##
##     *=Takes numeric right value
##     **=Takes numeric right value or facility/serverity name
##     ***=Takes either numeric or string right value
##
##     Aliases:
##       level = severity
##       ident = sourcename
##
##   Action keywords:
##     action, log, tee
##
## Explanation:
##
##   facility
##   severity
##     standard RFC 3164 (4.1.1) facilities and severities, see below
##   tag
##     basically the first word of message payload.
##     usually the sourcename plus the pid optionally.
##   sourcename
##   pid
##     text and number extracted from tag.
##     can be forged by user.
##   msg
##     valuable message
##   realpid
##   proc_uid
##   proc_gid
##     authentic attributes of the log sender process got from socket's peer credentials from the kernel.
##     otherwise 0, -1, -1 respectively if peer credentials are not gotten.
##   proc_owner
##   proc_group
##     username and groupname corresponding to proc_uid and proc_gid.
##   exe
##     executable file path of running process (see /proc/PID/exe).
##     it's an interpreter for scripts.
##   comm
##   args
##     command name and command line arguments of running process (see /proc/PID/comm and /proc/PID/cmdline).
##     can be forged by user
##   exe_uid
##   exe_gid
##     executable file's owner and group owner (see exe)
##   exe_owner
##   exe_group
##     username and groupname corresponding to exe_uid and exe_gid
##   sourcenick
##     empty for messages received on socket.
##     nickname for messages received on Fifo (see Fifo file specification)
##   sourcefile
##     path for fifo and kmsg type log sources, empty otherwise
##   tee
##     as a testing keyword it checks the current message's "tee ID" which comes from an earlier tee action.
##     as an action keyword, it clones the current message and gives a "tee ID" (right value) to the resulting message.
##     it never clones a message which has been already cloned with the same "tee ID".
##
## Operators:
##   Numeric and string operators:
##     ==  equal
##     !=  not equal
##   Numeric operators:
##     <   less
##     >   greater
##     <=  less or equal
##     >=  greater or equal
##   String operators:
##     =~  regexp match
##     !~  negative regexp match
##     =*  case insensitive regexp match
##     !*  negative case insensitive regexp match
##   Rewrite operators
##     :=  overwrite
##     ^=  prepend
##     +=  append
##     :~  regexp substitution
##   Other:
##     =   use this for action keywords
##
## Facilities:
##     0	kern
##     1	user
##     2	mail
##     3	daemon
##     4	auth
##     5	syslog
##     6	lpr
##     7	news
##     8	uucp
##     9	cron
##     10	authpriv
##     11	ftp
##     12	ntp
##     13	audit
##     14	alert
##     15	clock
##     16	local0
##     17	local1
##     18	local2
##     19	local3
##     20	local4
##     21	local5
##     22	local6
##     23	local7
##
## Severities:
##     0	emerg, panic
##     1	alert
##     2	crit
##     3	error, err
##     4	warning, warn
##     5	notice
##     6	info
##     7	debug
##
## Rewritable properties:
##   Prependable, appendable, and can be regexpâ€“substituted:
##     tag, sourcename, msg
##   Overwriteable only:
##     facility, severity, pid
##
## Variable substitution:
##   Testing keywords are substituted with their value
##   Example, appending the name of the user runnin the process to the ident field:
##     facility==user sourcename+="-{{proc_owner}}"
##
## Regexp substitution:
##   Separate the pattern and the replacement with tilde `~' mark, eg:
##     msg:~error~ERROR
##   Use embedded notation for case insensitivity, eg:
##     msg:~(?i)error~ERROR
##   Use hex char notation to match tilde literally, eg:
##     msg:~\x7E~tilde
##   Substitution is global by default, be tricky if you need, eg:
##     msg:~(?i)error(.*)~ERROR$1
##   Regexp variables usable in replacement string are limited to:
##     $1 .. $9, $+, $`, $&, and $'
##
## Internal logging for debugging
##   log=SEVERITY,ATTRIBUTES;PREFIX
##   ATTRIBUTES is a comma-delimited list of [<testing-keyword> | [facility|severity]_name | "ALL"],
##   each of them is optionally prefixed with "-" (negation).
##     "ALL" expands to: realpid,proc_uid,proc_gid,proc_owner,proc_group,exe,comm,args,exe_uid,exe_gid,exe_owner,exe_group,facility_name,severity_name,tag,sourcename,pid
##        i.e. all testing keywords except 'msg'
##   PREFIX is an arbitrary string prepended to the log
##   Examples:
##     proc_owner==nobody  log="debug,ALL,-comm,-args;Nobody: "
##     tag=~/  log="debug,ALL,-exe_uid,-exe_gid,-exe_owner,-exe_group,msg;Path in tag: "
##     sourcename==test  msg:~test~TEST  log=info,severity_name,facility_name
##     sourcename==test  msg^="test: "  log=debug,ALL,proc_owner,proc_group,exe
##
## Examples:
##   proc_owner!=root action=drop
##   severity>crit action=accept
##   severity<=crit proc_uid>=1000 log=info action=drop
##   tag=~^/USR/SBIN/CRON sourcename:=CRON log=debug
##
## Fifo name specification
##
##   Command line option syntax
##     --fifo [NICKNAME]:[OWNER]:[GROUP]:[MODE]:<PATH>
##   
##   NICKNAME
##     Nick name for this Fifo. Must start with alpha numeric char. Empty string evaluated to basename of PATH.
##   OWNER
##     User name or UID of fifo file to be created, default is current uid
##   GROUP
##     Group name or GID of fifo file to be created, default is current gid
##   MODE
##     Fifo file's permissions in octal base, default is 0666
##   PATH
##     Path of fifo file to be created
##


### Rewrites ###

tag=*cron sourcename:=cron
sourcename==cupsd proc_owner==root facility==user facility:=lpr
tag=~^/etc/mysql/debian-start sourcename:=mysqld-debian
tag=~^/etc/init.d/mysql sourcename:=mysqld-debian
sourcename==apcupsd msg=~"Power failure" severity:=crit

# enforce "fifo-" prefox for messages arrived on fifo
sourcenick!="" tag:=fifo-{{fifonick}}

# log all logs
#log=debug


### Filters ###

# most system processes
proc_uid!=-1 proc_uid<1000 action=accept

# trusted programms
exe==/sbin/unix_chkpwd action=accept
exe==/usr/bin/sudo action=accept
exe==/bin/su action=accept

# trusted fifo
fifonick==supervisor action=accept

# disallow high level messages from who we don't know
exe=="" severity<error log="info;Unknown exe: " action=drop
proc_owner=="" severity<error log="info;Unknown process owner: " action=drop

# allow only these for everyone else
facility==user action=accept
facility>=local1 facility!=local3 facility<=local7 action=accept

# drop policy
log="notice,ALL,msg;Drop by policy: " action=drop

