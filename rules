##
## logwall(1) ruleset file
##
## Syntax:
##   <keyword><operator><value>
## There can be more keyword-operator-value triplets in one line
## delimited by whitespace.
##
## Keywords:
##
##   Testing keywords:
##     Log message's attributes:
##       facility**, severity**, tag, sourcename, pid*, msg
##     Logging process' attributes:
##       realpid*, puid*, pgid*, powner, pgroup, exe, comm, args
##     Process' executable file's attributes:
##       uid*, gid*, owner, group
##     Other attributes:
##       fifonick
##
##     *=Takes numeric value
##     **=Takes numeric value or facility/serverity name
##
##     Aliases:
##       level = severity
##       ident = sourcename
##
##   Action keywords:
##     jump, log, rwlog
##
## Explanation:
##
##   facility, severity - standard RFC 3164 (4.1.1) facilities and severities, see below
##   tag - basically the first word of message payload, the sourcename usually and pid optionally
##   sourcename, pid - text and number extracted from tag, can be forged by user
##   msg - valuable message
##   realpid, puid, pgid - authentic attributes of the log-sender process got from socket peer credentials data from the kernel; otherwise 0, -1, -1 respectively
##   powner, pgroup - username and group name corresponding to puid and pgid
##   exe - executable file path of running process (see /proc/PID/exe), it's the interpreter for scripts
##   comm, args - command name and command line arguments of running process (see /proc/PID/comm and /proc/PID/cmdline), can be forged by user
##   uid, gid - executable file's owner and group owner (see exe)
##   owner, group - username and group name corresponding to uid and gid
##   fifonick - empty for messages received on socket; nickname for messages received on Fifo - see Fifo file specification
##
## Operators:
##   Numeric and string operators:
##     ==  equal
##     !=  not equal
##   Numeric operators:
##     <   less
##     >   greater
##     <=  less or equal
##     >=  greater or equal
##   String operators:
##     =~  regexp match
##     !~  negative regexp match
##     =*  case insensitive regexp match
##     !*  negative case insensitive regexp match
##   Rewrite operators
##     :=  overwrite
##     ^=  prepend
##     +=  append
##     :~  regexp substitution
##   Other:
##     =   use this behind action keywords
##
## Facilities:
##     0	kern
##     1	user
##     2	mail
##     3	daemon
##     4	auth
##     5	syslog
##     6	lpr
##     7	news
##     8	uucp
##     9	cron
##     10	authpriv
##     11	ftp
##     12	ntp
##     13	audit
##     14	alert
##     15	clock
##     16	local0
##     17	local1
##     18	local2
##     19	local3
##     20	local4
##     21	local5
##     22	local6
##     23	local7
##
## Severities:
##     0	emerg, panic
##     1	alert
##     2	crit
##     3	error, err
##     4	warning, warn
##     5	notice
##     6	info
##     7	debug
##
## Rewritable properties:
##   Prependable, appendable, and can be regexpâ€“substituted:
##     tag, sourcename, msg
##   Overwriteable only:
##     facility, severity, pid
##
## Variable substitution:
##   Testing keywords are substituted with their value
##   Example, appending the name of the user runnin the process to the ident field:
##     facility==user sourcename+="-{{powner}}"
##
## Regexp substitution:
##   Separate the pattern and the replacement with tilde `~' mark, eg:
##     msg:~error~ERROR
##   Use embedded notation for case insensitivity, eg:
##     msg:~(?i)error~ERROR
##   Use hex char notation to match tilde literally, eg:
##     msg:~\x7E~tilde
##   Substitution is global by default, be tricky if you need, eg:
##     msg:~(?i)error(.*)~ERROR$1
##   Regexp variables usable in replacement string are limited to:
##     $1 .. $9, $+, $`, $&, and $'
##
## Internal logging for debugging
##   [log|rwlog]=SEVERITY,ATTRIBUTES
##   ATTRIBUTES: [-]<testing keyword>, [facility|severity]_name, "ALL", "RWALL"
##     ALL expands to: realpid,puid,pgid,powner,pgroup,exe,comm,args,uid,gid,owner,group,facility_name,severity_name,tag,sourcename,pid
##        i.e. all testing keywords except msg
##     RWALL expands to all so far rewritten attributes
##   Examples:
##     powner==nobody  log=debug,ALL,-comm,-args
##     tag=~/  log=debug,ALL,-uid,-gid,-owner,-group,msg
##     sourcename==test  msg:~test~TEST  rwlog=info log=info,severity_name,facility_name
##     sourcename==test  msg^="test: "  rwlog=debug,ALLRW,powner,pgroup,exe
##
## Examples:
##   powner!=root jump=drop
##   severity>crit jump=accept
##   severity<=crit puid>=1000 log=info jump=drop
##   sourcename==/USR/SBIN/CRON sourcename:=CRON rwlog=debug
##
## Fifo name specification
##
##   Command line option syntax
##     --fifo [NICKNAME]:[OWNER]:[GROUP]:[MODE]:<PATH>
##   
##   NICKNAME
##     Nick name for this Fifo. Must start with alpha numeric char. Empty string evaluated to basename of PATH.
##   OWNER
##     User name or UID of fifo file to be created, default is current uid
##   GROUP
##     Group name or GID of fifo file to be created, default is current gid
##   MODE
##     Fifo file's permissions in octal base, default is 0666
##   PATH
##     Path of fifo file to be created
##


### Rewrites ###

sourcename=*cron sourcename:=cron
sourcename==cupsd powner==root facility==user facility:=lpr
sourcename==/etc/mysql/debian-start sourcename:=mysqld-debian
sourcename==/etc/init.d/mysql sourcename:=mysqld-debian
sourcename==apcupsd msg=~"Power failure" severity:=crit

# enforce "fifo-" prefox for messages arrived on fifo
fifonick!="" tag:=fifo-{{fifonick}}

# log all logs
#log=debug rwlog=debug


### Filters ###

# most system processes
puid<1000 puid!=-1 jump=accept

# trusted programms
exe==/sbin/unix_chkpwd jump=accept
exe==/usr/bin/sudo jump=accept
exe==/bin/su jump=accept

# trusted fifo
fifonick==supervisor jump=accept

# disallow high level messages from who we don't know
exe=="" severity<error log=info jump=drop
powner=="" severity<error log=info jump=drop

# allow only these for everyone else
facility==user jump=accept
facility>=local1 facility!=local3 facility<=local7 jump=accept

# drop policy
log=notice,ALL,msg jump=drop

